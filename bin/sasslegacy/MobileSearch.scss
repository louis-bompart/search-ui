@import "bourbon/bourbon";
@import "Common";
@import "MobileCommon";
@import "Fonts";
@import "MobileSearchGrid";

html{
  width: 100%;
  height: 100%;
  overflow: hidden;

  * {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
}

body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: #FFFFFF;
  margin: 0;
  
  * {
    @include user-select(none);
  }
  
  input, textarea {
     @include user-select(text);
  }
}



.CoveoSearchInterface {
  word-break: break-word;
  position: fixed; /* Position fixed only partially supported in iOS*/
  top:0;
  bottom:0;
  left:0;
  right:0;
  display: -webkit-flex !important;
  display: -moz-flex !important;
  display: -ms-flexbox !important; // 2011 (IE 10)
  display: flex !important;
  @include flex-direction(column);
  width:100%;
  height:100%;

  min-height:0;

  @include transform(translate3d(0,0,0));


  font-size: 15px;
  max-width: 100%;

  font-family: $helvetica;

  overflow:hidden;

  .coveo-clicked {
    position: relative;
  }

  .coveo-clicked:before {
    content: ' ';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: rgb(223, 223, 223);
    pointer-events: none;
    opacity: 0.5;
    z-index: 1000;
    display: block;
  }
}

/*
.coveo-results-section {
  position: absolute;
  left:0;
  right: 0;
  top: 50px;
  bottom:0;
}



.coveo-search-section {
  background-color: $color-mobile-gray-search-section;
  height: 48px;
  padding: 4px 0px 0px 0px;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  box-shadow: 0px 1px 3px rgba(0,0,0,0.30);
}*/

.coveo-result-header-section {
  position: relative;
  font-size: 13px;
  background-color: $color-mobile-gray-results-header-section;
  &:after {
    content: '';
    clear: both;
    display: block;
  }
}

@include smallMobile() {
  .coveo-active-glass{
    z-index: 1000;
    opacity: 0.5;
  }
}

.coveo-active-glass.coveo-active-glass-for-current-tab {
  z-index: 1000;
  opacity: 0.5;
  top: 0px;
}

.coveo-tab-section, .coveo-flex-header, .coveo-flex-body, .coveo-facet-section {
  @include transition(all 0.4s);
}

.coveo-flex-header, .coveo-flex-body {
  margin-right: 280px;
}

@include smallMobile() {
  .coveo-flex-header, .coveo-flex-body {
    margin-right: 0;
  }
}

.coveo-slide-right {
  .coveo-tab-section, .coveo-flex-header, .coveo-flex-body, .coveo-glass, .coveo-facet-section  {
    @include transform(translate3d(260px,0,0));
  }
}

@include smallMobile() {
  .coveo-slide-right {
    .coveo-flex-header, .coveo-flex-body {
      right:0;
    }
  }
  .coveo-slide-left {
    .coveo-flex-header, .coveo-flex-body, .coveo-glass {
      @include transform(translate3d(-280px,0,0));
    }
    .coveo-facet-section {
      @include smallMobile() {
        @include transform(translate3d(-280px,0,0));
      }
    }
  }
}

/*.coveo-search-icon{
  @extend .coveo-sprites-searchButton-searchbutton;
}*/

.coveo-search-section-tab-icon{
  @extend .coveo-sprites-facet-openinterfaces;
  margin: auto;
}

.coveo-searchSectionTabButton{
  float: left;  
}

.coveo-searchSectionFacetsButton{
  float: right;
  display:none;
}

@include smallMobile() {
  .coveo-searchSectionFacetsButton {
    display: block;
  }
}

.coveo-searchSectionTabButton, .coveo-searchSectionFacetsButton{
  border-style: none;
  height: 40px;
  padding: 12px;
  background-color: $color-mobile-gray-search-section;
  @include transform(translate3d(0,0,150px));
}

.coveo-search-section-facets-icon{
  @extend .coveo-sprites-facet-openfacets;
  margin: auto;
}

/* Fix for iphone scroll. This force redraw after changing orientation */
.coveo-landscape .coveo-facet-container:after,
.coveo-landscape .coveo-tabs-container:after,
.coveo-landscape .CoveoResultList:after
 {
  content: ' ';
  display:block;
  height: 1px;
  clear: both;
}

.coveo-flex-body {
  @include flex(1);
  overflow: scroll;
}

.coveo-bottomSpace {
  height: 0 !important;
}

.coveo-topSpace {
  height: 0 !important;
}

.coveo-glass {
  position: absolute;
  top:0;
  left:0;
  bottom: 0;
  right: 0;
  background-color: #ffffff;
  z-index:-1000;
  @include transition-property (transform);
  @include transition-duration(0.4s);
}